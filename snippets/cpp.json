{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"include": {
		"prefix": "include",
		"body": [
			"#include <${1:/* library */}>"
		],
		"description": "include structure"
	},
	"simple structure": {
		"prefix": ["simple", "structure"],
		"body": [
			"typedef struct{",
			"\t${1:/*member*/}; ",
			"} ${2:structure_variable_name};",
		],
		"description": "simple structure syntax"
	},
	"named structure": {
		"prefix": ["named", "structure"],
		"body": [
			"typedef struct ${1:struct_name}{",
			"\t${2:/*member*/}; ",
			"};",
		],
		"description": "named structure syntax"
	},
	"ptr": {
		"prefix": "ptr",
		"body": [
			"->"
		],
		"description": "arrow"
	},
	"cout": {
		"prefix": "cout",
		"body": [
			"cout << \"${1:/* message */}\" << endl;"
		],
		"description": "cout structure"
	},
	"cin": {
		"prefix": "cin",
		"body": [
			"cin >> ${1:/*var*/};"
		],
		"description": "cin structure"
	},
	"out operator": {
		"prefix": ["out", "operator"],
		"body": [
			"<<"
		],
		"description": "out operator"
	},
	"in operator": {
		"prefix": ["in", "operator"],
		"body": [
			">>"
		],
		"description": "in operator"
	},
	"switch case": {
		"prefix": "switch",
		"body": [
			"switch (${1:/*expression*/}) {",
			"\tcase x:",
			"\t\t/*code*/",
			"\t\tbreak;",
			"\tdefault:",
			"\t\t/*code*/",
			"}"
		],
		"description": "switch case"
	},
	"basic structure": {
		"prefix": "basic",
		"body": [
			"#include <iostream>",
			"",
			"using namespace std;",
			"",
			"int main(int argc, char* argv[]) {",
			"\t${1:/*code*/}",
			"\treturn 0;",
			"}"
		],
		"description": "cpp basic structure"
	},
	"multi-line comment": {
		"prefix": ["multi", "comment"],
		"body": [
			"/*",
			"\t${1:}",
			"*/"
		],
		"description": "cin structure"
	},
	"this": {
		"prefix": "this",
		"body": [
			"this->"
		],
		"description": "this operator"
	},
	"vector": {
		"prefix": "vector",
		"body": [
			"vector<>"
		],
		"description": "vector extension"
	},
	"input variable": {
		"prefix": ["input", "variable"],
		"body": [
			"cout << \"Ingrese el dato: \";",
			"cin >> ${1:/*var*/};"
		],
		"description": "input a variable structure"
	}
}